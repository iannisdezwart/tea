<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated />
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3086a82b-272a-4bf3-a88b-35db2318c7db" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitmodules" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Submodules/googletest" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Assembler/assembler.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Assembler/buffer-builder.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Assembler/buffer.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Assembler/byte_code.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Assembler/executable.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/ASTNode.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/ASTNode.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/AssignmentExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/AssignmentExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/BinaryOperation.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/BinaryOperation.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/BreakStatement.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/BreakStatement.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/CastExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/CastExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/ClassDeclaration.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/ClassDeclaration.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/CodeBlock.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/CodeBlock.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/ContinueStatement.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/ContinueStatement.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/ForStatement.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/ForStatement.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/FunctionCall.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/FunctionCall.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/FunctionDeclaration.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/FunctionDeclaration.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/IdentifierExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/IdentifierExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/IfStatement.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/IfStatement.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/InitList.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/InitList.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/LiteralCharExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/LiteralCharExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/LiteralNumberExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/LiteralNumberExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/LiteralStringExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/LiteralStringExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/MemberExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/MemberExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/MethodCall.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/OffsetExpression.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/OffsetExpression.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/ReadValue.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/ReadValue.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/ReturnStatement.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/ReturnStatement.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/SysCall.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/SysCall.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/TypeIdentifierPair.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/TypeIdentifierPair.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/TypeName.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/TypeName.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/UnaryOperation.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/UnaryOperation.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/VariableDeclaration.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/VariableDeclaration.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/WhileStatement.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/WhileStatement.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/ASTNodes/WriteValue.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/ASTNodes/WriteValue.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/compile.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/compile.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/compiler-state.hpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/compiler.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/compiler.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/debugger-symbols.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/debugger-symbols.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/input.tea" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/input.tea" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/parser.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/parser.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/tokeniser.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/tokeniser.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/type.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/type.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Compiler/util.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Compiler/util.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Debugger/command.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Debugger/command.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Debugger/debug.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Debugger/debug.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Debugger/instruction-lister.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Debugger/instruction-lister.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Disassembler/disassemble.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Disassembler/disassemble.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Disassembler/disassembler.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/Disassembler/disassembler.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/VM/cpu.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/VM/cpu.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/VM/io-device.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/VM/io-device.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/VM/memory-mapper.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/VM/memory-mapper.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/VM/ram-device.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/VM/ram-device.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/VM/vm.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/VM/vm.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/ansi.hpp" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MakefileLocalSettings">
    <option name="availableProjects">
      <map>
        <entry>
          <key>
            <ExternalProjectPojo>
              <option name="name" value="tea" />
              <option name="path" value="$PROJECT_DIR$" />
            </ExternalProjectPojo>
          </key>
          <value>
            <list>
              <ExternalProjectPojo>
                <option name="name" value="tea" />
                <option name="path" value="$PROJECT_DIR$" />
              </ExternalProjectPojo>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="projectSyncType">
      <map>
        <entry key="$PROJECT_DIR$" value="RE_IMPORT" />
      </map>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2023" />
    <option name="minorVersion" value="3.4" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 2
}]]></component>
  <component name="ProjectId" id="2fhZo6tB5eqj218YyuitXUhaa6o" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Makefile Target.VM/vm.executor": "Run",
    "Makefile Target.all.executor": "Run",
    "Makefile Target.clean.executor": "Run",
    "Makefile Target.debug.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/iannis/Documents/tea",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "CPPToolchains",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Makefile Target.all">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="Unnamed" type="CMakeRunConfiguration" factoryName="Application" nameIsGenerated="true" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="VM/vm" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="VM/vm" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="all" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="all" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="clean" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="clean" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="debug" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="debug" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="CMake Application.Unnamed" />
      <item itemvalue="Makefile Target.VM/vm" />
      <item itemvalue="Makefile Target.all" />
      <item itemvalue="Makefile Target.clean" />
      <item itemvalue="Makefile Target.debug" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Makefile Target.all" />
        <item itemvalue="Makefile Target.debug" />
        <item itemvalue="Makefile Target.clean" />
        <item itemvalue="Makefile Target.VM/vm" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3086a82b-272a-4bf3-a88b-35db2318c7db" name="Changes" comment="" />
      <created>1714255441543</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714255441543</updated>
      <workItem from="1714255442612" duration="715000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>